{"version":3,"sources":["img/background7.jpeg","web3Connection.js","Contract.js","utils/Formatter.js","utils/Formate.js","components/Home.js","utils/SignData.js","utils/AuthenticationHash.js","components/SignUp.js","utils/AuthValidation.js","components/SignIn.js","components/SignOut.js","components/UserAccount.js","hooks/useWeb3.js","GetBalance.js","components/ErrorMessage.js","components/TxList.js","components/Exchange.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","web3Connection","web3","window","ethereum","Web3","Contract","eth","net","getId","networkId","deployedNetwork","Authentication","networks","abi","address","Formatter","Intl","NumberFormat","style","currency","minimumIntegerDigits","Formate","value","format","slice","Home","className","Grid","stackable","columns","textAlign","Row","Column","width","Image","src","img","alt","Component","SignData","username","accountAddress","personal","sign","err","signature","signedData","accounts","hashMessage","AuthenticationHash","password","digiCode","signedMessage","passwordDigiCodeHash","SignUp","state","digicode","alertMessage","status","signedUp","onSignUp","trim","length","setState","props","contract","methods","getUserAddress","call","from","account","hash","register","send","accountCreated","Card","fluid","centered","Content","Form","size","this","Message","negative","positive","console","log","Field","required","type","placeholder","autoComplete","onChange","e","target","Button","primary","onClick","to","AuthValidation","toLowerCase","getSignatureHash","hashFromContract","SignIn","loggedIn","onSignIn","usernameToSend","userSignedIn","SignOut","componentDidMount","loggedOut","UserAccount","wrapped","ui","Header","Meta","Description","charAt","toUpperCase","href","extra","useWeb3","setIsLoading","setErrorMessage","useState","provider","setProvider","setAccount","connect","Error","request","method","on","getAccounts","message","disconnect","Balance","isLoading","errorMessage","activeAccount","color","ErrorMessage","TxList","txs","map","item","key","startPayment","setError","setTxs","ether","addr","ethers","providers","Web3Provider","signer","getSigner","utils","getAddress","sendTransaction","parseEther","tx","Exchange","error","handleSubmit","preventDefault","data","FormData","get","onSubmit","name","options","label","App","balance","activeItem","handleItemClick","start","alert","location","getAccount","undefined","getBalance","fromWei","Menu","inverted","secondary","Item","active","as","Link","position","Divider","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.393df30a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background7.6c49df95.jpeg\";","import Web3 from 'web3';\r\n\r\nconst web3Connection = async () => {\r\n    let web3;\r\n    typeof window.ethereum !== 'undefined' ?\r\n    web3 = new Web3(window.ethereum) :\r\n    typeof window.web3 !== 'undefined' ?\r\n        web3 = window.web3 :\r\n        web3 = new Web3('http://localhost:8545');\r\n    return web3;\r\n}\r\n\r\nexport default web3Connection;","import Authentication from \"./contracts/Authentication.json\";\r\n\r\nconst Contract = async (web3) => {\r\n    const networkId = await web3.eth.net.getId();\r\n    const deployedNetwork = Authentication.networks[networkId];\r\n\r\n    return new web3.eth.Contract(\r\n        Authentication.abi,\r\n        deployedNetwork && deployedNetwork.address\r\n    );\r\n}\r\n\r\nexport default Contract;\r\n","function Formatter() {\r\n    return new Intl.NumberFormat(\r\n        'en-US',\r\n        {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n            minimumIntegerDigits: 2\r\n        }\r\n    )\r\n}\r\n\r\nexport default Formatter;","import Formatter from './Formatter';\r\n\r\nconst Formate = (value) => {\r\n    return Formatter().format(value).slice(1);\r\n}\r\n\r\nexport default Formate;","import React, { Component } from 'react';\r\nimport { Grid, Image } from 'semantic-ui-react';\r\nimport img from '../img/background7.jpeg';\r\nimport '../App.css';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className='home-page'>\r\n                <Grid stackable columns={3} textAlign='left'>\r\n                    <Grid.Row>\r\n                        <Grid.Column className=\"Content\" width={8}>\r\n                            This is a demonstration of a Blockchain based authentication\r\n                            where login information are not stored in a database, but the\r\n                            hash resulting from login data is stored on a smart contract.\r\n                            To authenticate users need an ethereum address, a username, a\r\n                            password and a four digit code. The user must be connected to\r\n                            the Blockchain before authentication since the web3 sign method\r\n                            is used to generate a cryptographic signature necessary for\r\n                            the generation of the user's login data hash.\r\n                        </Grid.Column>\r\n                        <Grid.Column width={1}>\r\n\r\n                        </Grid.Column>\r\n                        <Grid.Column width={7}>\r\n                            <Image className=\"Image\" src={img} alt='image' />\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","const SignData = async (username, accountAddress, web3) => {\r\n    let signedData;\r\n\r\n    await web3.eth.personal.sign(\r\n        username,\r\n        accountAddress,\r\n        (err, signature) => {\r\n            if (err) {\r\n                signedData = err;\r\n            } else {\r\n                signedData = web3.eth.accounts.hashMessage(signature);\r\n            }\r\n        }\r\n    );\r\n\r\n    return signedData;\r\n}\r\n\r\nexport default SignData;","import SignData from './SignData';\r\n\r\nconst AuthenticationHash = async (username, accountAddress, password, digiCode, web3) => {\r\n    let signedMessage = await SignData(username, accountAddress, web3);\r\n    let passwordDigiCodeHash = await web3.eth.accounts.hashMessage(password + digiCode);\r\n\r\n    return await web3.eth.accounts.hashMessage(signedMessage + passwordDigiCodeHash);\r\n}\r\n\r\nexport default AuthenticationHash;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Card, Message } from 'semantic-ui-react';\r\nimport AuthenticationHash from '../utils/AuthenticationHash';\r\nimport \"../App.css\";\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        digicode: '',\r\n        alertMessage: '',\r\n        status: '',\r\n        signedUp: false\r\n    }\r\n\r\n    onSignUp = async () => {\r\n        //this.setState({ signedUp: false });\r\n\r\n        if (this.state.username !== '' && this.state.password !== '' && this.state.digicode !== '') {\r\n            let username = this.state.username.trim();\r\n            let password = this.state.password.trim();\r\n            let digicode = this.state.digicode.trim();\r\n\r\n            //===\r\n            if (password.length < 8) {\r\n                this.setState({\r\n                    alertMessage: \"at least 8 characters for password\",\r\n                    status: 'failed',\r\n                    password: '',\r\n                    digicode: '',\r\n                });\r\n                return;\r\n            } else {\r\n\r\n            } if (digicode.length !== 6) {\r\n                this.setState({\r\n                    alertMessage: \"6 digit required for digicode\",\r\n                    status: 'failed',\r\n                    digicode: ''\r\n                });\r\n                return\r\n            } else {\r\n                let userAddress = await this.props.contract.methods.getUserAddress()\r\n                    .call({ from: this.props.account });\r\n\r\n                if (userAddress !== '0x0000000000000000000000000000000000000000') {\r\n                    this.setState({\r\n                        alertMessage: 'this account already exists',\r\n                        status: 'failed',\r\n                        username: '',\r\n                        password: '',\r\n                        digicode: '',\r\n                    });\r\n\r\n                    return;\r\n                } else {\r\n                    let hash = await AuthenticationHash(username, this.props.account, password, digicode, this.props.web3);\r\n\r\n                    await this.props.contract.methods.register(hash).send({ from: this.props.account });\r\n\r\n                    this.setState({\r\n                        username: '',\r\n                        password: '',\r\n                        digicode: '',\r\n                        status: 'success',\r\n                        alertMessage: \"Signup successful\",\r\n                        signedUp: true\r\n                    });\r\n\r\n                    this.props.accountCreated(this.state.signedUp);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sign-up\">\r\n                Create an account\r\n                <div className='signup-form'>\r\n                    <Card fluid centered>\r\n                        <Card.Content>\r\n                            <Form size='large'>\r\n                                {\r\n                                    this.state.alertMessage !== '' && this.state.status === 'failed' ?\r\n                                        <Message negative>\r\n                                            {this.state.alertMessage}\r\n                                        </Message> :\r\n                                        this.state.alertMessage !== '' && this.state.status === 'success' ?\r\n                                            <Message positive>\r\n                                                {this.state.alertMessage}\r\n                                            </Message> :\r\n                                            console.log('')\r\n                                }\r\n                                <Form.Field>\r\n                                    <input\r\n                                        required\r\n                                        type='text'\r\n                                        placeholder='username'\r\n                                        value={this.state.username}\r\n                                        autoComplete=\"username\"\r\n                                        onChange={e => this.setState({ username: e.target.value })}\r\n                                    />\r\n                                </Form.Field>\r\n                                <Form.Field>\r\n                                    <input\r\n                                        required\r\n                                        type='password'\r\n                                        placeholder='password'\r\n                                        value={this.state.password}\r\n                                        autoComplete=\"current-password\"\r\n                                        onChange={e => this.setState({ password: e.target.value })}\r\n                                    />\r\n                                </Form.Field>\r\n                                <Form.Field>\r\n                                    <input\r\n                                        required\r\n                                        type='text'\r\n                                        placeholder='6 digit code'\r\n                                        value={this.state.digicode}\r\n                                        autoComplete=\"digicode\"\r\n                                        onChange={e => this.setState({ digicode: e.target.value })}\r\n                                    />\r\n                                </Form.Field>\r\n                                <Form.Field>\r\n                                    <Button type='submit' primary fluid size='large' onClick={this.onSignUp}>\r\n                                        Create account\r\n                                    </Button>\r\n                                </Form.Field>\r\n                            </Form>\r\n                        </Card.Content>\r\n                    </Card>\r\n                    <div className=\"signin-onUp\">\r\n                        Already have an account? <Link to='/sign-in'>Sign in</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp\r\n","import SignData from './SignData';\r\n\r\nconst AuthValidation = async (username, accountAddress, password, digiCode, web3, contract) => {\r\n\r\n    let userAddress = await contract.methods.getUserAddress().call({ from: accountAddress });\r\n\r\n    if (userAddress.toLowerCase() !== accountAddress.toLowerCase()) {\r\n        return false;\r\n    } else {\r\n        let signedData = await SignData(username, accountAddress, web3);\r\n        let passwordDigiCodeHash = await web3.eth.accounts.hashMessage(password + digiCode);\r\n\r\n        let hash = await web3.eth.accounts.hashMessage(signedData + passwordDigiCodeHash);\r\n\r\n        // get hash from the contract\r\n        let hashFromContract = await contract.methods.getSignatureHash().call({ from: accountAddress });\r\n\r\n        if (hash === hashFromContract) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default AuthValidation;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Card, Message } from 'semantic-ui-react';\r\nimport AuthValidation from '../utils/AuthValidation';\r\nimport \"../App.css\";\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        digicode: '',\r\n        alertMessage: '',\r\n        status: '',\r\n        loggedIn: false\r\n    }\r\n\r\n    onSignIn = async () => {\r\n\r\n        if (this.state.username !== '' && this.state.password !== '' && this.state.digicode !== '') {\r\n            let username = this.state.username.trim();\r\n            let password = this.state.password.trim();\r\n            let digicode = this.state.digicode.trim();\r\n\r\n            let usernameToSend = username;\r\n\r\n            //===\r\n            if (password.length < 8) {\r\n                this.setState({\r\n                    alertMessage: \"at least 8 characters for password\",\r\n                    status: 'failed',\r\n                    password: '',\r\n                    digicode: '',\r\n                });\r\n                return;\r\n            } else {\r\n\r\n            } if (digicode.length !== 6) {\r\n                this.setState({\r\n                    alertMessage: \"6 digit required for digicode\",\r\n                    status: 'failed',\r\n                    digicode: ''\r\n                });\r\n                return\r\n            } else {\r\n                let userAddress = await this.props.contract.methods.getUserAddress()\r\n                    .call({ from: this.props.account });\r\n\r\n                if (userAddress === '0x0000000000000000000000000000000000000000') {\r\n                    this.setState({\r\n                        alertMessage: 'Account does not exists',\r\n                        status: 'failed',\r\n                        username: '',\r\n                        password: '',\r\n                        digicode: '',\r\n                    });\r\n                    return;\r\n                } else {\r\n                    let validated = await\r\n                        AuthValidation(\r\n                            username,\r\n                            this.props.account,\r\n                            password, digicode,\r\n                            this.props.web3,\r\n                            this.props.contract\r\n                        );\r\n\r\n                    if (!validated) {\r\n                        this.setState({\r\n                            alertMessage: 'Incorrect log in',\r\n                            status: 'failed',\r\n                            username: '',\r\n                            password: '',\r\n                            digicode: '',\r\n                        });\r\n                        return\r\n                    } else {\r\n                        this.setState({\r\n                            username: '',\r\n                            password: '',\r\n                            digicode: '',\r\n                            status: 'success',\r\n                            alertMessage: \"Sign in successful\",\r\n                            loggedIn: true\r\n                        });\r\n\r\n                        this.props.userSignedIn(\r\n                            this.state.loggedIn,\r\n                            usernameToSend\r\n                        );\r\n\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        this.setState({\r\n            username: '',\r\n            password: '',\r\n            digicode: ''\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"sign-up\">\r\n                Sign in to your account\r\n                <div className='signup-form'>\r\n                    <Card fluid centered>\r\n                        <Card.Content>\r\n                            <Form size='large'>\r\n                                {\r\n                                    this.state.alertMessage !== '' && this.state.status === 'failed' ?\r\n                                        <Message negative>\r\n                                            {this.state.alertMessage}\r\n                                        </Message> :\r\n                                        this.state.alertMessage !== '' && this.state.status === 'success' ?\r\n                                            <Message positive>\r\n                                                {this.state.alertMessage}\r\n                                            </Message> :\r\n                                            console.log('')\r\n                                }\r\n                                <Form.Field required>\r\n                                    <input\r\n                                        type='text'\r\n                                        placeholder='username'\r\n                                        value={this.state.username}\r\n                                        autoComplete=\"username\"\r\n                                        onChange={e => this.setState({ username: e.target.value })}\r\n                                    />\r\n                                </Form.Field>\r\n                                <Form.Field required>\r\n                                    <input\r\n                                        type='password'\r\n                                        placeholder='password'\r\n                                        value={this.state.password}\r\n                                        autoComplete=\"current-password\"\r\n                                        onChange={e => this.setState({ password: e.target.value })}\r\n                                    />\r\n                                </Form.Field>\r\n                                <Form.Field required>\r\n                                    <input\r\n                                        type='text'\r\n                                        placeholder='6 digit code'\r\n                                        value={this.state.digicode}\r\n                                        autoComplete=\"digicode\"\r\n                                        onChange={e => this.setState({ digicode: e.target.value })}\r\n                                    />\r\n                                </Form.Field>\r\n                                <Form.Field>\r\n                                    <Button type='submit' primary fluid size='large' onClick={this.onSignIn}>\r\n                                        Sign in\r\n                                    </Button>\r\n                                </Form.Field>\r\n                            </Form>\r\n                        </Card.Content>\r\n                    </Card>\r\n                    {\r\n                        this.props.signedUp ?\r\n                            console.log() :\r\n                            <div className=\"signin-onUp\">\r\n                                Don't have an account? <Link to='/sign-up'>Sign up</Link>\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass SignOut extends Component {\r\n    componentDidMount = () => {\r\n        this.props.loggedOut(false);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"sign-up\">\r\n                    <div className=\"signin-onUp\">\r\n                        Already have an account? <Link to='/sign-in'>Sign in</Link>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignOut;\r\n","import React, { Component } from 'react';\r\nimport { Card, Grid, Message, Image } from 'semantic-ui-react';\r\nimport '../App.css';\r\nclass UserAccount extends Component {\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div className='user-account'>\r\n                <Grid centered stackable>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <Card fluid>\r\n                                <Image\r\n                                    src='https://react.semantic-ui.com/images/avatar/large/steve.jpg'\r\n                                    wrapped ui={false}\r\n                                />\r\n                                <Card.Content>\r\n                                    <Card.Header>{this.props.username}</Card.Header>\r\n                                    <Card.Meta>\r\n                                        <span>user</span>\r\n                                    </Card.Meta>\r\n                                    <Card.Description>\r\n                                        <strong>\r\n                                            {\r\n                                                this.props.username.charAt(0).toUpperCase() +\r\n                                                this.props.username.toLowerCase().slice(1)\r\n                                                \r\n                                            }\r\n                                        </strong> is a scientist and Blockchain developer living in Ho Chi Minh, Viet Nam.\r\n                                        <br></br>\r\n                                        <a href='https://github.com/darkroller210' target='blank'>\r\n                                            Github Profile\r\n                                        </a>\r\n                                    </Card.Description>\r\n                                </Card.Content>\r\n                                <Card.Content extra>\r\n                                    <Message size='mini'>\r\n                                        {this.props.account.toLowerCase()}\r\n                                    </Message>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserAccount;\r\n","import { useState } from 'react';\r\nimport Web3 from 'web3';\r\n\r\n// it's convenient to move metamask/web3 connection code to a separate custom hook\r\nfunction useWeb3(setIsLoading, setErrorMessage) {\r\n  // web3 instance\r\n  const [provider, setProvider] = useState(null);\r\n  // active account\r\n  const [account, setAccount] = useState('');\r\n  // connect this function to a button click event\r\n  const connect = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      setErrorMessage('');\r\n      // ensure Metamask is installed\r\n      if (!window.ethereum) throw new Error('You should enable Metamask');\r\n      // show Metamask prompt\r\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n      // connect Metamask to web3.js and get a web3 provider instance\r\n      const web3 = new Web3(window.ethereum);\r\n      setProvider(web3);\r\n      // refresh account on change\r\n      window.ethereum.on('accountsChanged', (accounts) =>\r\n        setAccount(accounts[0]),\r\n      );\r\n      // retrieve Metamask accounts from web3\r\n      const accounts = await web3.eth.getAccounts();\r\n      setAccount(accounts[0]);\r\n    } catch (error) {\r\n      setErrorMessage(error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  // connect this function to a disconnect button\r\n  const disconnect = () => {\r\n    setProvider(null);\r\n    setAccount('');\r\n  };\r\n  return { connect, disconnect, provider, account };\r\n}\r\n\r\nexport default useWeb3;","import React, { useState } from 'react';\r\nimport useWeb3 from './hooks/useWeb3';\r\nimport './Balance.css';\r\n\r\nfunction Balance() {\r\n  // loading status\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // error messages\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  // get active account and balance data from useWeb3 hook\r\n  const {\r\n    connect,\r\n    disconnect,\r\n    provider,\r\n    account: activeAccount,\r\n  } = useWeb3(setIsLoading, setErrorMessage);\r\n  return (\r\n    <div className=\"Balance\">\r\n      {/* instantiate web3 only after a user clicks the button */}\r\n      {/* avoid doing it automatically */}\r\n      {!provider ? (\r\n        <button className=\"button-connect\" onClick={connect}>Connect to MetaMask</button>\r\n      ) : (\r\n        <>\r\n          <p style={{color:'#FFFFFF'}}>{activeAccount}</p>\r\n          <button className=\"button-connect\" onClick={disconnect}>Disconnect</button>\r\n        </>\r\n      )}\r\n      {/* show loading and error statuses */}\r\n      {isLoading && <p>Loading...</p>}\r\n      {errorMessage && <p>{errorMessage}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Balance;","import React from \"react\";\r\nimport '../bootstrap/bootstrap.min.css';\r\nimport '../bootstrap/Format.css';\r\nfunction ErrorMessage({ message }) {\r\n    if (!message) return null;\r\n  \r\n    return (\r\n      <div className=\"alert alert-error mt-5\">\r\n        <div className=\"flex-1\">\r\n          <label className=\"lable-error\">{message}</label>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default ErrorMessage;\r\n  ","import React from \"react\";\r\nfunction TxList({ txs }) {\r\n    if (txs.length === 0) return null;\r\n    const link = 'https://testnet.bscscan.com/tx/'\r\n    return (\r\n      <>\r\n        {txs.map((item) => (\r\n          <div key={item} className=\"alert alert-info mt-5\">\r\n            <div className=\"flex-1\">\r\n              <label><a href={link+item.hash}>{item.hash}</a></label>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default TxList;","import React, { useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\nimport TxList from \"./TxList\";\r\nimport Select from 'react-select'\r\nimport '../bootstrap/Format.css';\r\n\r\nconst startPayment = async ({ setError, setTxs, ether, addr }) => {\r\n  try {\r\n    if (!window.ethereum)\r\n      throw new Error(\"No crypto wallet found. Please install it.\");\r\n\r\n    await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const signer = provider.getSigner();\r\n    ethers.utils.getAddress(addr);\r\n    const tx = await signer.sendTransaction({\r\n      to: addr,\r\n      value: ethers.utils.parseEther(ether)\r\n    });\r\n    console.log({ ether, addr });\r\n    console.log(\"tx\", tx);\r\n    setTxs([tx]);\r\n  } catch (err) {\r\n    setError(err.message);\r\n  }\r\n};\r\n\r\nexport default function Exchange() {\r\n  const [error, setError] = useState();\r\n  const [txs, setTxs] = useState([]);\r\n  const options = [\r\n    { value: 'bnb', label: 'BNB'},\r\n    { value: 'ether', label: 'ETH' },\r\n    { value: 'usdt', label: 'USDT' }\r\n  ]\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n    setError();\r\n    await startPayment({\r\n      setError,\r\n      setTxs,\r\n      ether: data.get(\"bnb\"),\r\n      addr: data.get(\"addr\")\r\n    });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <form className=\"Form-payment\" onSubmit={handleSubmit}>\r\n      <div className=\"format-box-payment\">\r\n        <main className=\"main-format\">\r\n          <h1 className=\"text-xl font-semibold text-gray-700 text-center\">\r\n            Send ETH payment\r\n          </h1>\r\n          <div className=\"\">\r\n            <div className=\"my-3\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"addr\"\r\n                className=\"input-payment\"\r\n                placeholder=\"Recipient Address\"\r\n              />\r\n            </div>\r\n            <Select\r\n                options={options}\r\n            />\r\n            <div className=\"my-3\">\r\n              <input\r\n                name=\"bnb\"\r\n                type=\"text\"\r\n                className=\"input-payment\"\r\n                placeholder=\"Amount in BNB\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </main>\r\n        <footer className=\"p-4\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary submit-button focus:ring focus:outline-none w-full\"\r\n          >\r\n            Pay now\r\n          </button>\r\n          <ErrorMessage message={error} />\r\n          <TxList txs={txs} />\r\n        </footer>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport web3Connection from './web3Connection';\r\nimport Contract from './Contract';\r\nimport Formate from './utils/Formate';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { Menu, Divider } from \"semantic-ui-react\";\r\nimport { BrowserRouter, Switch, Route, Link, Redirect } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport SignUp from \"./components/SignUp\";\r\nimport SignIn from \"./components/SignIn\"\r\nimport SignOut from \"./components/SignOut\";\r\nimport UserAccount from './components/UserAccount';\r\nimport Address from './GetBalance';\r\nimport Exchange from './components/Exchange';\r\nimport \"./App.css\";\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    web3: null,\r\n    account: null,\r\n    contract: null,\r\n    balance: null,\r\n    activeItem: 'home',\r\n    signedUp: false,\r\n    loggedIn: false,\r\n    username: ''\r\n    //color: 'teal'\r\n  };\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name, color: 'teal' })\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      const web3 = await web3Connection();\r\n      const contract = await Contract(web3);\r\n      const accounts = await web3.eth.getAccounts();\r\n\r\n      this.setState({ web3, contract, account: accounts[0] }, this.start);\r\n    } catch (error) {\r\n      alert(\r\n        '\\tFail to load Web3 \\n\\tPlease install or enbale Metamask',\r\n      );\r\n      window.location=\"https://metamask.io/download/\"\r\n      console.error();\r\n    }\r\n    await this.getAccount();\r\n  };\r\n\r\n  start = async () => {\r\n    await this.getAccount();\r\n    const { web3, contract, account } = this.state;\r\n\r\n    console.log(\"web3 =\", web3);\r\n    console.log(\"Contract =\", contract);\r\n    console.log(\"Acoount =\", account);\r\n  };\r\n\r\n\r\n\r\n  getAccount = async () => {\r\n    if (this.state.web3 !== null || this.state.web3 !== undefined) {\r\n      await window.ethereum.on('accountsChanged', async (accounts) => {\r\n        this.setState({\r\n          account: accounts[0],\r\n          loggedIn: false\r\n        });\r\n\r\n        this.state.web3.eth.getBalance(accounts[0], (err, balance) => {\r\n          if (!err) {\r\n            this.setState({ balance: Formate(this.state.web3.utils.fromWei(balance, 'ether')) });\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  accountCreated = async (signedUp) => {\r\n    this.setState({ signedUp });\r\n  }\r\n\r\n  userSignedIn = async (loggedIn, username) => {\r\n    this.setState({ loggedIn, username });\r\n  }\r\n\r\n  loggedOut = async (loggedIn) => {\r\n    this.setState({ loggedIn });\r\n  }\r\n\r\n  render() {\r\n    const { activeItem, color } = this.state;\r\n\r\n    if (!this.state.web3) {\r\n      return <div>Loading Web3, accounts, and contract...</div>;\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"main-page\">\r\n          <BrowserRouter>\r\n            <div className=\"home-nav\">\r\n              <Menu stackable inverted secondary size='large'>\r\n                <Menu.Item\r\n                  name='home'\r\n                  color={color}\r\n                  active={activeItem === 'home'}\r\n                  onClick={this.handleItemClick}\r\n                  as={Link}\r\n                  to='/'\r\n                />\r\n                <Menu.Item\r\n                  name='help'\r\n                  color={color}\r\n                  active={activeItem === 'help'}\r\n                  onClick={this.handleItemClick}\r\n                  as={Link}\r\n                  to='/help'\r\n                />\r\n                {\r\n                  this.state.loggedIn ?\r\n                  <Menu.Item\r\n                  name='Payment'\r\n                  color={color}\r\n                  active={activeItem === 'Exchange'}\r\n                  onClick={this.handleItemClick}\r\n                  as={Link}\r\n                  to='/exchange'\r\n                  />\r\n                  :\r\n                  console.log('')\r\n                }\r\n                {/* <Exchange /> */}\r\n                {\r\n                  this.state.loggedIn ?\r\n                    <Menu.Item\r\n                      position='right'\r\n                      name='user account'\r\n                      color={color}\r\n                      active={activeItem === 'user account'}\r\n                      onClick={this.handleItemClick}\r\n                      as={Link}\r\n                      to='/user-account'\r\n                    />\r\n                    :\r\n                    console.log('')\r\n                }\r\n                {\r\n                  !this.state.loggedIn ?\r\n                    <Menu.Item\r\n                      position='right'\r\n                      name='sign in'\r\n                      color={color}\r\n                      active={activeItem === 'sign in'}\r\n                      onClick={this.handleItemClick}\r\n                      as={Link}\r\n                      to='/sign-in'\r\n                    />\r\n                    :\r\n                    console.log('')\r\n                }\r\n\r\n                {\r\n                  this.state.loggedIn ?\r\n                    <Menu.Item\r\n                      name='sign out'\r\n                      color='red'\r\n                      active={activeItem === 'sign out'}\r\n                      onClick={this.handleItemClick}\r\n                      as={Link}\r\n                      to='/sign-out'\r\n                    />\r\n                    :\r\n                    <Menu.Item\r\n                      name='sign up'\r\n                      color={color}\r\n                      active={activeItem === 'sign up'}\r\n                      onClick={this.handleItemClick}\r\n                      as={Link}\r\n                      to='/sign-up'\r\n                    />\r\n                }\r\n                {/*<WalletCard />*/}\r\n                <Address />\r\n              </Menu>\r\n            </div>\r\n            <Divider inverted />\r\n\r\n            <Switch>\r\n              <Route exact path='/' >\r\n                <Home />\r\n              </Route>\r\n              <Route path='/help' >\r\n                <div style={{color:\"whitesmoke\"}}>\r\n                  <h1>Help page</h1>\r\n                </div>\r\n                <div className=\"Contact\">\r\n                  <h2>Contact</h2>\r\n                  <img className=\"image-icoin\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/ec/Circle-icons-mail.svg\" alt=\"Mail Icoin\"></img>\r\n                  Mail: darkroller210@gmail.com\r\n                  <br></br>\r\n                  <img className=\"image-icoin\" src=\"https://upload.wikimedia.org/wikipedia/commons/8/83/Circle-icons-phone.svg\" alt=\"Phone Icoin\"></img>\r\n                  Phone: +84999736521\r\n                </div>\r\n              </Route>\r\n              {\r\n                this.state.loggedIn ?\r\n                  <Route path='/user-account' >\r\n                    <UserAccount\r\n                      account={this.state.account}\r\n                      username={this.state.username}\r\n                    />\r\n                  </Route>\r\n                  :\r\n                  <Route path='/user-account'>\r\n                    <div style={{color:'white'}}>You have been logged out</div>\r\n                  </Route>\r\n              }\r\n              {\r\n                this.state.loggedIn ?\r\n                <Route path='/Exchange' >\r\n                    <Exchange />\r\n                  </Route>\r\n                  :\r\n                  <Route path='/Exchange'>\r\n                    <div style={{color:'white'}}>You have been logged out</div>\r\n                  </Route>\r\n              }\r\n              {\r\n                <Route path='/sign-in' >\r\n                  {\r\n                    this.state.loggedIn ?\r\n                      <Redirect to='/user-account' />\r\n                      :\r\n                      <SignIn\r\n                        web3={this.state.web3}\r\n                        contract={this.state.contract}\r\n                        account={this.state.account}\r\n                        signedUp={this.state.signedUp}\r\n                        userSignedIn={this.userSignedIn}\r\n                      />\r\n                  }\r\n                </Route>\r\n              }\r\n              <Route path='/exchange' >\r\n                <Exchange></Exchange>\r\n                <Redirect to ='/Exchange'/>\r\n              </Route>\r\n              \r\n              {\r\n                this.state.loggedIn ?\r\n                  <Route path='/sign-out'>\r\n                    <SignOut\r\n                      loggedOut={this.loggedOut}\r\n                    />\r\n                    <div style={{color:'white'}}>You've been logged out</div>\r\n                    <br></br>\r\n                    <div style={{color:'white'}}>Thank you</div>\r\n                  </Route>\r\n                  :\r\n                  <Route path='/sign-up' >\r\n                    <SignUp\r\n                      web3={this.state.web3}\r\n                      contract={this.state.contract}\r\n                      account={this.state.account}\r\n                      accountCreated={this.accountCreated}\r\n                    />\r\n                  </Route>\r\n              }\r\n              \r\n            </Switch>\r\n          </BrowserRouter>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}